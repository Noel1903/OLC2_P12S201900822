// Code generated from Swiftlex.g4 by ANTLR 4.13.0. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type Swiftlex struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var SwiftlexLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func swiftlexLexerInit() {
	staticData := &SwiftlexLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'Int'", "'Float'", "'String'", "'Bool'", "'Character'", "'true'",
		"'false'", "'nil'", "'var'", "'let'", "'print'", "'if'", "'else'", "'switch'",
		"'case'", "'break'", "'default'", "'while'", "'for'", "'in'", "'guard'",
		"'continue'", "'return'", "'func'", "'struct'", "'mutating'", "'self'",
		"'inout'", "'append'", "'removeLast'", "'remove'", "'at'", "'IsEmpty'",
		"'count'", "", "", "", "", "", "'+='", "'-='", "'...'", "'+'", "'-'",
		"'*'", "'/'", "'%'", "'?'", "'||'", "'&&'", "'!'", "'=='", "'!='", "'<'",
		"'<='", "'>'", "'>='", "'='", "'.'", "','", "':'", "';'", "'('", "')'",
		"'{'", "'}'", "'['", "']'", "'->'", "'_'",
	}
	staticData.SymbolicNames = []string{
		"", "INT", "FLOAT", "STRING", "BOOL", "CHARACTER", "TRUE", "FALSE",
		"NIL", "VAR", "LET", "PRINT", "IF", "ELSE", "SWITCH", "CASE", "BREAK",
		"DEFAULT", "WHILE", "FOR", "IN", "GUARD", "CONTINUE", "RETURN", "FUNC",
		"STRUCT", "MUTATING", "SELF", "INOUT", "APPEND", "REMOVELAST", "REMOVE",
		"AT", "ISEMPTY", "COUNT", "NUMBER", "FLOATT", "ID", "CHARACTER_LITERAL",
		"STRING_LITERAL", "INCREMENT", "DECREMENT", "RANGE", "SUMMATION", "SUBTRACTION",
		"MULTIPLICATION", "DIVISION", "MOD", "QUESTION_MARK", "OR", "AND", "NOT",
		"EQUAL", "NOT_EQUAL", "LESS_THAN", "LESS_THAN_EQUAL", "GREATER_THAN",
		"GREATER_THAN_EQUAL", "ASSIGN", "DOT", "COMMA", "COLON", "SEMICOLON",
		"OPEN_PARENTHESIS", "CLOSE_PARENTHESIS", "OPEN_kEY", "CLOSE_kEY", "OPEN_BRACKET",
		"CLOSE_BRACKET", "ARROW", "UNDERSCORE", "WHITESPACE", "COMMENT", "LINE_COMMENT",
	}
	staticData.RuleNames = []string{
		"INT", "FLOAT", "STRING", "BOOL", "CHARACTER", "TRUE", "FALSE", "NIL",
		"VAR", "LET", "PRINT", "IF", "ELSE", "SWITCH", "CASE", "BREAK", "DEFAULT",
		"WHILE", "FOR", "IN", "GUARD", "CONTINUE", "RETURN", "FUNC", "STRUCT",
		"MUTATING", "SELF", "INOUT", "APPEND", "REMOVELAST", "REMOVE", "AT",
		"ISEMPTY", "COUNT", "NUMBER", "FLOATT", "ID", "CHARACTER_LITERAL", "STRING_LITERAL",
		"INCREMENT", "DECREMENT", "RANGE", "SUMMATION", "SUBTRACTION", "MULTIPLICATION",
		"DIVISION", "MOD", "QUESTION_MARK", "OR", "AND", "NOT", "EQUAL", "NOT_EQUAL",
		"LESS_THAN", "LESS_THAN_EQUAL", "GREATER_THAN", "GREATER_THAN_EQUAL",
		"ASSIGN", "DOT", "COMMA", "COLON", "SEMICOLON", "OPEN_PARENTHESIS",
		"CLOSE_PARENTHESIS", "OPEN_kEY", "CLOSE_kEY", "OPEN_BRACKET", "CLOSE_BRACKET",
		"ARROW", "UNDERSCORE", "WHITESPACE", "COMMENT", "LINE_COMMENT", "ESC_SEQ",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 73, 499, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2,
		73, 7, 73, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
		1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5,
		1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7,
		1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1,
		10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12,
		1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1,
		14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16,
		1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1,
		17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20,
		1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1,
		21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23,
		1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1,
		24, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 26,
		1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1,
		28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29,
		1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1,
		30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 32,
		1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1,
		34, 4, 34, 355, 8, 34, 11, 34, 12, 34, 356, 1, 35, 4, 35, 360, 8, 35, 11,
		35, 12, 35, 361, 1, 35, 1, 35, 4, 35, 366, 8, 35, 11, 35, 12, 35, 367,
		3, 35, 370, 8, 35, 1, 36, 1, 36, 5, 36, 374, 8, 36, 10, 36, 12, 36, 377,
		9, 36, 1, 37, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 5, 38, 385, 8, 38, 10,
		38, 12, 38, 388, 9, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40,
		1, 40, 1, 41, 1, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1,
		44, 1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 48, 1, 49,
		1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 51, 1, 52, 1, 52, 1, 52, 1,
		53, 1, 53, 1, 54, 1, 54, 1, 54, 1, 55, 1, 55, 1, 56, 1, 56, 1, 56, 1, 57,
		1, 57, 1, 58, 1, 58, 1, 59, 1, 59, 1, 60, 1, 60, 1, 61, 1, 61, 1, 62, 1,
		62, 1, 63, 1, 63, 1, 64, 1, 64, 1, 65, 1, 65, 1, 66, 1, 66, 1, 67, 1, 67,
		1, 68, 1, 68, 1, 68, 1, 69, 1, 69, 1, 70, 4, 70, 466, 8, 70, 11, 70, 12,
		70, 467, 1, 70, 1, 70, 1, 71, 1, 71, 1, 71, 1, 71, 5, 71, 476, 8, 71, 10,
		71, 12, 71, 479, 9, 71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 72, 1, 72,
		1, 72, 1, 72, 5, 72, 490, 8, 72, 10, 72, 12, 72, 493, 9, 72, 1, 72, 1,
		72, 1, 73, 1, 73, 1, 73, 1, 477, 0, 74, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11,
		6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15,
		31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24,
		49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33,
		67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42,
		85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50, 101, 51,
		103, 52, 105, 53, 107, 54, 109, 55, 111, 56, 113, 57, 115, 58, 117, 59,
		119, 60, 121, 61, 123, 62, 125, 63, 127, 64, 129, 65, 131, 66, 133, 67,
		135, 68, 137, 69, 139, 70, 141, 71, 143, 72, 145, 73, 147, 0, 1, 0, 7,
		1, 0, 48, 57, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95,
		95, 97, 122, 1, 0, 34, 34, 3, 0, 9, 10, 13, 13, 32, 32, 2, 0, 10, 10, 13,
		13, 7, 0, 32, 33, 35, 35, 43, 43, 45, 46, 58, 58, 64, 64, 91, 93, 506,
		0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0,
		0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0,
		0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0,
		0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1,
		0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39,
		1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0,
		47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0,
		0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0,
		0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0,
		0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1,
		0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85,
		1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0,
		93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0,
		0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1,
		0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0,
		115, 1, 0, 0, 0, 0, 117, 1, 0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1, 0,
		0, 0, 0, 123, 1, 0, 0, 0, 0, 125, 1, 0, 0, 0, 0, 127, 1, 0, 0, 0, 0, 129,
		1, 0, 0, 0, 0, 131, 1, 0, 0, 0, 0, 133, 1, 0, 0, 0, 0, 135, 1, 0, 0, 0,
		0, 137, 1, 0, 0, 0, 0, 139, 1, 0, 0, 0, 0, 141, 1, 0, 0, 0, 0, 143, 1,
		0, 0, 0, 0, 145, 1, 0, 0, 0, 1, 149, 1, 0, 0, 0, 3, 153, 1, 0, 0, 0, 5,
		159, 1, 0, 0, 0, 7, 166, 1, 0, 0, 0, 9, 171, 1, 0, 0, 0, 11, 181, 1, 0,
		0, 0, 13, 186, 1, 0, 0, 0, 15, 192, 1, 0, 0, 0, 17, 196, 1, 0, 0, 0, 19,
		200, 1, 0, 0, 0, 21, 204, 1, 0, 0, 0, 23, 210, 1, 0, 0, 0, 25, 213, 1,
		0, 0, 0, 27, 218, 1, 0, 0, 0, 29, 225, 1, 0, 0, 0, 31, 230, 1, 0, 0, 0,
		33, 236, 1, 0, 0, 0, 35, 244, 1, 0, 0, 0, 37, 250, 1, 0, 0, 0, 39, 254,
		1, 0, 0, 0, 41, 257, 1, 0, 0, 0, 43, 263, 1, 0, 0, 0, 45, 272, 1, 0, 0,
		0, 47, 279, 1, 0, 0, 0, 49, 284, 1, 0, 0, 0, 51, 291, 1, 0, 0, 0, 53, 300,
		1, 0, 0, 0, 55, 305, 1, 0, 0, 0, 57, 311, 1, 0, 0, 0, 59, 318, 1, 0, 0,
		0, 61, 329, 1, 0, 0, 0, 63, 336, 1, 0, 0, 0, 65, 339, 1, 0, 0, 0, 67, 347,
		1, 0, 0, 0, 69, 354, 1, 0, 0, 0, 71, 359, 1, 0, 0, 0, 73, 371, 1, 0, 0,
		0, 75, 378, 1, 0, 0, 0, 77, 382, 1, 0, 0, 0, 79, 391, 1, 0, 0, 0, 81, 394,
		1, 0, 0, 0, 83, 397, 1, 0, 0, 0, 85, 401, 1, 0, 0, 0, 87, 403, 1, 0, 0,
		0, 89, 405, 1, 0, 0, 0, 91, 407, 1, 0, 0, 0, 93, 409, 1, 0, 0, 0, 95, 411,
		1, 0, 0, 0, 97, 413, 1, 0, 0, 0, 99, 416, 1, 0, 0, 0, 101, 419, 1, 0, 0,
		0, 103, 421, 1, 0, 0, 0, 105, 424, 1, 0, 0, 0, 107, 427, 1, 0, 0, 0, 109,
		429, 1, 0, 0, 0, 111, 432, 1, 0, 0, 0, 113, 434, 1, 0, 0, 0, 115, 437,
		1, 0, 0, 0, 117, 439, 1, 0, 0, 0, 119, 441, 1, 0, 0, 0, 121, 443, 1, 0,
		0, 0, 123, 445, 1, 0, 0, 0, 125, 447, 1, 0, 0, 0, 127, 449, 1, 0, 0, 0,
		129, 451, 1, 0, 0, 0, 131, 453, 1, 0, 0, 0, 133, 455, 1, 0, 0, 0, 135,
		457, 1, 0, 0, 0, 137, 459, 1, 0, 0, 0, 139, 462, 1, 0, 0, 0, 141, 465,
		1, 0, 0, 0, 143, 471, 1, 0, 0, 0, 145, 485, 1, 0, 0, 0, 147, 496, 1, 0,
		0, 0, 149, 150, 5, 73, 0, 0, 150, 151, 5, 110, 0, 0, 151, 152, 5, 116,
		0, 0, 152, 2, 1, 0, 0, 0, 153, 154, 5, 70, 0, 0, 154, 155, 5, 108, 0, 0,
		155, 156, 5, 111, 0, 0, 156, 157, 5, 97, 0, 0, 157, 158, 5, 116, 0, 0,
		158, 4, 1, 0, 0, 0, 159, 160, 5, 83, 0, 0, 160, 161, 5, 116, 0, 0, 161,
		162, 5, 114, 0, 0, 162, 163, 5, 105, 0, 0, 163, 164, 5, 110, 0, 0, 164,
		165, 5, 103, 0, 0, 165, 6, 1, 0, 0, 0, 166, 167, 5, 66, 0, 0, 167, 168,
		5, 111, 0, 0, 168, 169, 5, 111, 0, 0, 169, 170, 5, 108, 0, 0, 170, 8, 1,
		0, 0, 0, 171, 172, 5, 67, 0, 0, 172, 173, 5, 104, 0, 0, 173, 174, 5, 97,
		0, 0, 174, 175, 5, 114, 0, 0, 175, 176, 5, 97, 0, 0, 176, 177, 5, 99, 0,
		0, 177, 178, 5, 116, 0, 0, 178, 179, 5, 101, 0, 0, 179, 180, 5, 114, 0,
		0, 180, 10, 1, 0, 0, 0, 181, 182, 5, 116, 0, 0, 182, 183, 5, 114, 0, 0,
		183, 184, 5, 117, 0, 0, 184, 185, 5, 101, 0, 0, 185, 12, 1, 0, 0, 0, 186,
		187, 5, 102, 0, 0, 187, 188, 5, 97, 0, 0, 188, 189, 5, 108, 0, 0, 189,
		190, 5, 115, 0, 0, 190, 191, 5, 101, 0, 0, 191, 14, 1, 0, 0, 0, 192, 193,
		5, 110, 0, 0, 193, 194, 5, 105, 0, 0, 194, 195, 5, 108, 0, 0, 195, 16,
		1, 0, 0, 0, 196, 197, 5, 118, 0, 0, 197, 198, 5, 97, 0, 0, 198, 199, 5,
		114, 0, 0, 199, 18, 1, 0, 0, 0, 200, 201, 5, 108, 0, 0, 201, 202, 5, 101,
		0, 0, 202, 203, 5, 116, 0, 0, 203, 20, 1, 0, 0, 0, 204, 205, 5, 112, 0,
		0, 205, 206, 5, 114, 0, 0, 206, 207, 5, 105, 0, 0, 207, 208, 5, 110, 0,
		0, 208, 209, 5, 116, 0, 0, 209, 22, 1, 0, 0, 0, 210, 211, 5, 105, 0, 0,
		211, 212, 5, 102, 0, 0, 212, 24, 1, 0, 0, 0, 213, 214, 5, 101, 0, 0, 214,
		215, 5, 108, 0, 0, 215, 216, 5, 115, 0, 0, 216, 217, 5, 101, 0, 0, 217,
		26, 1, 0, 0, 0, 218, 219, 5, 115, 0, 0, 219, 220, 5, 119, 0, 0, 220, 221,
		5, 105, 0, 0, 221, 222, 5, 116, 0, 0, 222, 223, 5, 99, 0, 0, 223, 224,
		5, 104, 0, 0, 224, 28, 1, 0, 0, 0, 225, 226, 5, 99, 0, 0, 226, 227, 5,
		97, 0, 0, 227, 228, 5, 115, 0, 0, 228, 229, 5, 101, 0, 0, 229, 30, 1, 0,
		0, 0, 230, 231, 5, 98, 0, 0, 231, 232, 5, 114, 0, 0, 232, 233, 5, 101,
		0, 0, 233, 234, 5, 97, 0, 0, 234, 235, 5, 107, 0, 0, 235, 32, 1, 0, 0,
		0, 236, 237, 5, 100, 0, 0, 237, 238, 5, 101, 0, 0, 238, 239, 5, 102, 0,
		0, 239, 240, 5, 97, 0, 0, 240, 241, 5, 117, 0, 0, 241, 242, 5, 108, 0,
		0, 242, 243, 5, 116, 0, 0, 243, 34, 1, 0, 0, 0, 244, 245, 5, 119, 0, 0,
		245, 246, 5, 104, 0, 0, 246, 247, 5, 105, 0, 0, 247, 248, 5, 108, 0, 0,
		248, 249, 5, 101, 0, 0, 249, 36, 1, 0, 0, 0, 250, 251, 5, 102, 0, 0, 251,
		252, 5, 111, 0, 0, 252, 253, 5, 114, 0, 0, 253, 38, 1, 0, 0, 0, 254, 255,
		5, 105, 0, 0, 255, 256, 5, 110, 0, 0, 256, 40, 1, 0, 0, 0, 257, 258, 5,
		103, 0, 0, 258, 259, 5, 117, 0, 0, 259, 260, 5, 97, 0, 0, 260, 261, 5,
		114, 0, 0, 261, 262, 5, 100, 0, 0, 262, 42, 1, 0, 0, 0, 263, 264, 5, 99,
		0, 0, 264, 265, 5, 111, 0, 0, 265, 266, 5, 110, 0, 0, 266, 267, 5, 116,
		0, 0, 267, 268, 5, 105, 0, 0, 268, 269, 5, 110, 0, 0, 269, 270, 5, 117,
		0, 0, 270, 271, 5, 101, 0, 0, 271, 44, 1, 0, 0, 0, 272, 273, 5, 114, 0,
		0, 273, 274, 5, 101, 0, 0, 274, 275, 5, 116, 0, 0, 275, 276, 5, 117, 0,
		0, 276, 277, 5, 114, 0, 0, 277, 278, 5, 110, 0, 0, 278, 46, 1, 0, 0, 0,
		279, 280, 5, 102, 0, 0, 280, 281, 5, 117, 0, 0, 281, 282, 5, 110, 0, 0,
		282, 283, 5, 99, 0, 0, 283, 48, 1, 0, 0, 0, 284, 285, 5, 115, 0, 0, 285,
		286, 5, 116, 0, 0, 286, 287, 5, 114, 0, 0, 287, 288, 5, 117, 0, 0, 288,
		289, 5, 99, 0, 0, 289, 290, 5, 116, 0, 0, 290, 50, 1, 0, 0, 0, 291, 292,
		5, 109, 0, 0, 292, 293, 5, 117, 0, 0, 293, 294, 5, 116, 0, 0, 294, 295,
		5, 97, 0, 0, 295, 296, 5, 116, 0, 0, 296, 297, 5, 105, 0, 0, 297, 298,
		5, 110, 0, 0, 298, 299, 5, 103, 0, 0, 299, 52, 1, 0, 0, 0, 300, 301, 5,
		115, 0, 0, 301, 302, 5, 101, 0, 0, 302, 303, 5, 108, 0, 0, 303, 304, 5,
		102, 0, 0, 304, 54, 1, 0, 0, 0, 305, 306, 5, 105, 0, 0, 306, 307, 5, 110,
		0, 0, 307, 308, 5, 111, 0, 0, 308, 309, 5, 117, 0, 0, 309, 310, 5, 116,
		0, 0, 310, 56, 1, 0, 0, 0, 311, 312, 5, 97, 0, 0, 312, 313, 5, 112, 0,
		0, 313, 314, 5, 112, 0, 0, 314, 315, 5, 101, 0, 0, 315, 316, 5, 110, 0,
		0, 316, 317, 5, 100, 0, 0, 317, 58, 1, 0, 0, 0, 318, 319, 5, 114, 0, 0,
		319, 320, 5, 101, 0, 0, 320, 321, 5, 109, 0, 0, 321, 322, 5, 111, 0, 0,
		322, 323, 5, 118, 0, 0, 323, 324, 5, 101, 0, 0, 324, 325, 5, 76, 0, 0,
		325, 326, 5, 97, 0, 0, 326, 327, 5, 115, 0, 0, 327, 328, 5, 116, 0, 0,
		328, 60, 1, 0, 0, 0, 329, 330, 5, 114, 0, 0, 330, 331, 5, 101, 0, 0, 331,
		332, 5, 109, 0, 0, 332, 333, 5, 111, 0, 0, 333, 334, 5, 118, 0, 0, 334,
		335, 5, 101, 0, 0, 335, 62, 1, 0, 0, 0, 336, 337, 5, 97, 0, 0, 337, 338,
		5, 116, 0, 0, 338, 64, 1, 0, 0, 0, 339, 340, 5, 73, 0, 0, 340, 341, 5,
		115, 0, 0, 341, 342, 5, 69, 0, 0, 342, 343, 5, 109, 0, 0, 343, 344, 5,
		112, 0, 0, 344, 345, 5, 116, 0, 0, 345, 346, 5, 121, 0, 0, 346, 66, 1,
		0, 0, 0, 347, 348, 5, 99, 0, 0, 348, 349, 5, 111, 0, 0, 349, 350, 5, 117,
		0, 0, 350, 351, 5, 110, 0, 0, 351, 352, 5, 116, 0, 0, 352, 68, 1, 0, 0,
		0, 353, 355, 7, 0, 0, 0, 354, 353, 1, 0, 0, 0, 355, 356, 1, 0, 0, 0, 356,
		354, 1, 0, 0, 0, 356, 357, 1, 0, 0, 0, 357, 70, 1, 0, 0, 0, 358, 360, 7,
		0, 0, 0, 359, 358, 1, 0, 0, 0, 360, 361, 1, 0, 0, 0, 361, 359, 1, 0, 0,
		0, 361, 362, 1, 0, 0, 0, 362, 369, 1, 0, 0, 0, 363, 365, 5, 46, 0, 0, 364,
		366, 7, 0, 0, 0, 365, 364, 1, 0, 0, 0, 366, 367, 1, 0, 0, 0, 367, 365,
		1, 0, 0, 0, 367, 368, 1, 0, 0, 0, 368, 370, 1, 0, 0, 0, 369, 363, 1, 0,
		0, 0, 369, 370, 1, 0, 0, 0, 370, 72, 1, 0, 0, 0, 371, 375, 7, 1, 0, 0,
		372, 374, 7, 2, 0, 0, 373, 372, 1, 0, 0, 0, 374, 377, 1, 0, 0, 0, 375,
		373, 1, 0, 0, 0, 375, 376, 1, 0, 0, 0, 376, 74, 1, 0, 0, 0, 377, 375, 1,
		0, 0, 0, 378, 379, 5, 34, 0, 0, 379, 380, 8, 3, 0, 0, 380, 381, 5, 34,
		0, 0, 381, 76, 1, 0, 0, 0, 382, 386, 5, 34, 0, 0, 383, 385, 8, 3, 0, 0,
		384, 383, 1, 0, 0, 0, 385, 388, 1, 0, 0, 0, 386, 384, 1, 0, 0, 0, 386,
		387, 1, 0, 0, 0, 387, 389, 1, 0, 0, 0, 388, 386, 1, 0, 0, 0, 389, 390,
		5, 34, 0, 0, 390, 78, 1, 0, 0, 0, 391, 392, 5, 43, 0, 0, 392, 393, 5, 61,
		0, 0, 393, 80, 1, 0, 0, 0, 394, 395, 5, 45, 0, 0, 395, 396, 5, 61, 0, 0,
		396, 82, 1, 0, 0, 0, 397, 398, 5, 46, 0, 0, 398, 399, 5, 46, 0, 0, 399,
		400, 5, 46, 0, 0, 400, 84, 1, 0, 0, 0, 401, 402, 5, 43, 0, 0, 402, 86,
		1, 0, 0, 0, 403, 404, 5, 45, 0, 0, 404, 88, 1, 0, 0, 0, 405, 406, 5, 42,
		0, 0, 406, 90, 1, 0, 0, 0, 407, 408, 5, 47, 0, 0, 408, 92, 1, 0, 0, 0,
		409, 410, 5, 37, 0, 0, 410, 94, 1, 0, 0, 0, 411, 412, 5, 63, 0, 0, 412,
		96, 1, 0, 0, 0, 413, 414, 5, 124, 0, 0, 414, 415, 5, 124, 0, 0, 415, 98,
		1, 0, 0, 0, 416, 417, 5, 38, 0, 0, 417, 418, 5, 38, 0, 0, 418, 100, 1,
		0, 0, 0, 419, 420, 5, 33, 0, 0, 420, 102, 1, 0, 0, 0, 421, 422, 5, 61,
		0, 0, 422, 423, 5, 61, 0, 0, 423, 104, 1, 0, 0, 0, 424, 425, 5, 33, 0,
		0, 425, 426, 5, 61, 0, 0, 426, 106, 1, 0, 0, 0, 427, 428, 5, 60, 0, 0,
		428, 108, 1, 0, 0, 0, 429, 430, 5, 60, 0, 0, 430, 431, 5, 61, 0, 0, 431,
		110, 1, 0, 0, 0, 432, 433, 5, 62, 0, 0, 433, 112, 1, 0, 0, 0, 434, 435,
		5, 62, 0, 0, 435, 436, 5, 61, 0, 0, 436, 114, 1, 0, 0, 0, 437, 438, 5,
		61, 0, 0, 438, 116, 1, 0, 0, 0, 439, 440, 5, 46, 0, 0, 440, 118, 1, 0,
		0, 0, 441, 442, 5, 44, 0, 0, 442, 120, 1, 0, 0, 0, 443, 444, 5, 58, 0,
		0, 444, 122, 1, 0, 0, 0, 445, 446, 5, 59, 0, 0, 446, 124, 1, 0, 0, 0, 447,
		448, 5, 40, 0, 0, 448, 126, 1, 0, 0, 0, 449, 450, 5, 41, 0, 0, 450, 128,
		1, 0, 0, 0, 451, 452, 5, 123, 0, 0, 452, 130, 1, 0, 0, 0, 453, 454, 5,
		125, 0, 0, 454, 132, 1, 0, 0, 0, 455, 456, 5, 91, 0, 0, 456, 134, 1, 0,
		0, 0, 457, 458, 5, 93, 0, 0, 458, 136, 1, 0, 0, 0, 459, 460, 5, 45, 0,
		0, 460, 461, 5, 62, 0, 0, 461, 138, 1, 0, 0, 0, 462, 463, 5, 95, 0, 0,
		463, 140, 1, 0, 0, 0, 464, 466, 7, 4, 0, 0, 465, 464, 1, 0, 0, 0, 466,
		467, 1, 0, 0, 0, 467, 465, 1, 0, 0, 0, 467, 468, 1, 0, 0, 0, 468, 469,
		1, 0, 0, 0, 469, 470, 6, 70, 0, 0, 470, 142, 1, 0, 0, 0, 471, 472, 5, 47,
		0, 0, 472, 473, 5, 42, 0, 0, 473, 477, 1, 0, 0, 0, 474, 476, 9, 0, 0, 0,
		475, 474, 1, 0, 0, 0, 476, 479, 1, 0, 0, 0, 477, 478, 1, 0, 0, 0, 477,
		475, 1, 0, 0, 0, 478, 480, 1, 0, 0, 0, 479, 477, 1, 0, 0, 0, 480, 481,
		5, 42, 0, 0, 481, 482, 5, 47, 0, 0, 482, 483, 1, 0, 0, 0, 483, 484, 6,
		71, 0, 0, 484, 144, 1, 0, 0, 0, 485, 486, 5, 47, 0, 0, 486, 487, 5, 47,
		0, 0, 487, 491, 1, 0, 0, 0, 488, 490, 8, 5, 0, 0, 489, 488, 1, 0, 0, 0,
		490, 493, 1, 0, 0, 0, 491, 489, 1, 0, 0, 0, 491, 492, 1, 0, 0, 0, 492,
		494, 1, 0, 0, 0, 493, 491, 1, 0, 0, 0, 494, 495, 6, 72, 0, 0, 495, 146,
		1, 0, 0, 0, 496, 497, 5, 92, 0, 0, 497, 498, 7, 6, 0, 0, 498, 148, 1, 0,
		0, 0, 10, 0, 356, 361, 367, 369, 375, 386, 467, 477, 491, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SwiftlexInit initializes any static state used to implement Swiftlex. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSwiftlex(). You can call this function if you wish to initialize the static state ahead
// of time.
func SwiftlexInit() {
	staticData := &SwiftlexLexerStaticData
	staticData.once.Do(swiftlexLexerInit)
}

// NewSwiftlex produces a new lexer instance for the optional input antlr.CharStream.
func NewSwiftlex(input antlr.CharStream) *Swiftlex {
	SwiftlexInit()
	l := new(Swiftlex)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &SwiftlexLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "Swiftlex.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// Swiftlex tokens.
const (
	SwiftlexINT                = 1
	SwiftlexFLOAT              = 2
	SwiftlexSTRING             = 3
	SwiftlexBOOL               = 4
	SwiftlexCHARACTER          = 5
	SwiftlexTRUE               = 6
	SwiftlexFALSE              = 7
	SwiftlexNIL                = 8
	SwiftlexVAR                = 9
	SwiftlexLET                = 10
	SwiftlexPRINT              = 11
	SwiftlexIF                 = 12
	SwiftlexELSE               = 13
	SwiftlexSWITCH             = 14
	SwiftlexCASE               = 15
	SwiftlexBREAK              = 16
	SwiftlexDEFAULT            = 17
	SwiftlexWHILE              = 18
	SwiftlexFOR                = 19
	SwiftlexIN                 = 20
	SwiftlexGUARD              = 21
	SwiftlexCONTINUE           = 22
	SwiftlexRETURN             = 23
	SwiftlexFUNC               = 24
	SwiftlexSTRUCT             = 25
	SwiftlexMUTATING           = 26
	SwiftlexSELF               = 27
	SwiftlexINOUT              = 28
	SwiftlexAPPEND             = 29
	SwiftlexREMOVELAST         = 30
	SwiftlexREMOVE             = 31
	SwiftlexAT                 = 32
	SwiftlexISEMPTY            = 33
	SwiftlexCOUNT              = 34
	SwiftlexNUMBER             = 35
	SwiftlexFLOATT             = 36
	SwiftlexID                 = 37
	SwiftlexCHARACTER_LITERAL  = 38
	SwiftlexSTRING_LITERAL     = 39
	SwiftlexINCREMENT          = 40
	SwiftlexDECREMENT          = 41
	SwiftlexRANGE              = 42
	SwiftlexSUMMATION          = 43
	SwiftlexSUBTRACTION        = 44
	SwiftlexMULTIPLICATION     = 45
	SwiftlexDIVISION           = 46
	SwiftlexMOD                = 47
	SwiftlexQUESTION_MARK      = 48
	SwiftlexOR                 = 49
	SwiftlexAND                = 50
	SwiftlexNOT                = 51
	SwiftlexEQUAL              = 52
	SwiftlexNOT_EQUAL          = 53
	SwiftlexLESS_THAN          = 54
	SwiftlexLESS_THAN_EQUAL    = 55
	SwiftlexGREATER_THAN       = 56
	SwiftlexGREATER_THAN_EQUAL = 57
	SwiftlexASSIGN             = 58
	SwiftlexDOT                = 59
	SwiftlexCOMMA              = 60
	SwiftlexCOLON              = 61
	SwiftlexSEMICOLON          = 62
	SwiftlexOPEN_PARENTHESIS   = 63
	SwiftlexCLOSE_PARENTHESIS  = 64
	SwiftlexOPEN_kEY           = 65
	SwiftlexCLOSE_kEY          = 66
	SwiftlexOPEN_BRACKET       = 67
	SwiftlexCLOSE_BRACKET      = 68
	SwiftlexARROW              = 69
	SwiftlexUNDERSCORE         = 70
	SwiftlexWHITESPACE         = 71
	SwiftlexCOMMENT            = 72
	SwiftlexLINE_COMMENT       = 73
)
